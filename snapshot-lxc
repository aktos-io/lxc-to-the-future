#!/bin/bash
set -eu -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source

SUBVOL=${1:-}
NAME=${2:-}

DIR="/var/lib/lxc"
GUEST_ROOT="$DIR/$NAME/rootfs"

if [[ "$SUBVOL" == "" || "$NAME" == "" ]]; then
	cat <<ERR

usage:

	$(basename $0) /path/to/subvolume your-container-name

in order to delete a LXC container, run

	$(basename $0) delete your-container-name

ERR
	exit
fi

# All checks are done, run as root.
[[ $(whoami) = "root" ]] || { sudo $0 $*; exit 0; }

if [[ "$SUBVOL" == "delete" ]]; then
	read -p "Press enter to delete LXC container: $NAME"
    set +e
    lxc-stop -n $NAME
	btrfs sub delete $GUEST_ROOT
	rm -r $(dirname $GUEST_ROOT)
	exit
fi

START_TIME=$SECONDS

echo "creating the container directory: $NAME"
mkdir $(dirname $GUEST_ROOT)

echo "creating a writable snapshot of given subvolume"
btrfs sub snap $SUBVOL $GUEST_ROOT

$_sdir/dcs-tools/give-new-id \
    --hostname $NAME \
    --root-dir $GUEST_ROOT \
    --skip-ssh-keys

echo "emptying the /etc/fstab file"
mv $GUEST_ROOT/etc/fstab $GUEST_ROOT/etc/fstab.real
touch $GUEST_ROOT/etc/fstab

echo "remove the LXC specific entry from GUEST/etc/network/interfaces file"
IFACE_FILE=$GUEST_ROOT/etc/network/interfaces
mv $IFACE_FILE $IFACE_FILE.real

awk '/lxc-bridge/ {do_print=0}
     do_print==1 {print}
     NF==0 {do_print=1}' $IFACE_FILE.real > $IFACE_FILE


echo "creating the config file"
cat <<CONFIG > $(dirname $GUEST_ROOT)/config

# Template used to create this container: /usr/share/lxc/templates/lxc-download
# Parameters passed to the template:
# Template script checksum (SHA-1): 740c51206e35463362b735e68b867876048a8baf
# For additional config options, please look at lxc.container.conf(5)

# Uncomment the following line to support nesting containers:
#lxc.include = /usr/share/lxc/config/nesting.conf
# (Be aware this has security implications)


# Distribution configuration
lxc.include = /usr/share/lxc/config/debian.common.conf
lxc.arch = $(uname -m)

# Container specific configuration
lxc.rootfs = /var/lib/lxc/$NAME/rootfs
lxc.rootfs.backend = dir
lxc.utsname = $NAME

# Network configuration
lxc.network.type = veth
lxc.network.link = lxc-bridge
lxc.network.flags = up
#lxc.network.ipv4 = 10.0.8.8
#lxc.network.ipv4.gateway = 10.0.8.1

# GUI configuration
#lxc.cgroup.devices.allow = c 226:0 rwm
#lxc.cgroup.devices.allow = c 29:0 rwm
#lxc.cgroup.devices.allow = c 4:7 rwm
#lxc.cgroup.devices.allow = c 4:8 rwm

CONFIG

echo "done in $(($SECONDS - $START_TIME)) seconds..."

cat <<USAGE

to run the vm:

	sudo lxc-start -n $NAME

to attach the root console:

	sudo lxc-attach -n $NAME

---------------------------------------------------
                  NOTE:

* Configure network in /var/lib/lxc/$NAME/config

---------------------------------------------------
USAGE
